#include <iostream>
#include <fstream>
#include <string>
/*1. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á—Ç–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ñ–∞–π–ª–æ–≤ —Ñ–æ—Ä–º–∞—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
–º–æ–∂–Ω–æ –ø–æ –ø—Ä–∏–º–µ—Ä–∞–º.b. ZIP: Local File Header  */
/*
struct HEADER{
    int sign;
    short version;
    short flag;
    short comp;
    short LT;
    short LD;
    int crc;
    int sizec;
    int sized;
    short LN;
    short LE;
    float FN;
};
int main(){
    std::ifstream f("files.zip", std::ios::binary);
    HEADER header;
    f.read((char *)&header, sizeof(header));
    std::cout<<header.sign;
    f.close();
    return 0;
}
*/
/*3. –ü—Ä–æ—Ç–∞–±—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é. –ù–∞—á–∞–ª—å–Ω—É—é –∏ —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ç–æ—á–∫–∏, —à–∞–≥, –ø–∞—Ä–∞–º–µ—Ç—Ä –ß
        —Å—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ in.txt. –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª out.txt. –§–æ—Ä–º–∞—Ç
            –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:
    x0, y(x0)
    x1, y(x1)
    x2, y(x2)
    –∏ —Ç.–¥.
    b. ùë¶ = 1/ùë• + 1/2ùë• + 1/3ùë• + ‚ãØ + 1/(–ß ùëã)*/

/*

int main() {
    std::ifstream in("in.txt");
    std::ofstream out("out.txt");
    if(!in.is_open() or !out.is_open()){
        std::cout << "Error. Unable to open file!";
        return 0;
    }


    float x0, xn, step, c;
    in >> x0 >> xn >> step >> c;

    for (float x = x0; x <= xn; x += step) {
        float y = 0;
        for (int i = 1; i <= c; i++) {
            y += 1 / (i * x);
        }
        out << x << ", " << y << std::endl;
    }

    in.close();
    out.close();

    return 0;

}
*/
/*5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö: –§–∞–º–∏–ª–∏—è, –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞, –ö—É—Ä—Å.
    –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä –≤ —Ñ–∞–π–ª –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: 1
    —Å—Ç—Ä–æ–∫–∞ –§–∞–º–∏–ª–∏—è, 2 —Å—Ç—Ä–æ–∫–∞ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞, 3 —Å—Ç—Ä–æ–∫–∞ –ö—É—Ä—Å. –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    –ø–æ–≤—Ç–æ—Ä—è—é—Ç —Ç—Ä–æ–π–∫–∞–º–∏ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
*/
/*
struct Student {
    std::string surname;
    double average_grade;
    int course;
};

int main() {
    int n;
    std::cout << "Enter the number of students: ";
    std::cin >> n;

    Student* students = new Student[n];

    for (int i = 0; i < n; i++) {
        std::cout << "Enter student's surname: ";
        std::cin >> students[i].surname;
        std::cout << "Enter student's average grade: ";
        std::cin >> students[i].average_grade;
        std::cout << "Enter student's course: ";
        std::cin >> students[i].course;
    }

    std::ofstream out("students.txt");

    for (int i = 0; i < n; i++) {
        out << students[i].surname << std::endl;
        out << students[i].average_grade << std::endl;
        out << students[i].course << std::endl;
    }

    delete[] students;

    return 0;
}
*/
